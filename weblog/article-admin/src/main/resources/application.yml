## 用本地配置

##自定义属性
base:
    config:
        swagger:
            enabled: true
            contact:
                name: ZJH
                email: 18826233829@163.com
                url:
            title: 博客文章管理api
            description: 博客文章管理接口
            version: 2.0

##非自定义属性
server:
    port: ${SERVER_PORT:7800} # 启动端口
spring:
    application:
        name: ${SPRING_APPLICATION_NAME:article-admin}
    cloud:
        nacos:
            discovery: # nacos注册中心地址配置
                server-addr: ${SPRING_CLOUD_NACOS_SERVERADDR:localhost:8848}
                namespace: ${SPRING_CLOUD_NACOS_DISCOVERY_NAMESPACE:a4d0cf40-1125-4263-81e5-3f628bc90302} # 命名空间ID
                group: ${SPRING_CLOUD_NACOS_DISCOVERY_GROUP:blog} # 配置管理Group
            config: # nacos配置中心地址配置
                server-addr: ${SPRING_CLOUD_NACOS_SERVERADDR:localhost:8848}
                file-extension: ${SPRING_CLOUD_NACOS_FILEEXTENSION:yml} # nacos配置文件格式后缀
                namespace: ${SPRING_CLOUD_NACOS_CONFIG_NAMESPACE:a4d0cf40-1125-4263-81e5-3f628bc90302} # 命名空间ID
                group: ${SPRING_CLOUD_NACOS_CONFIG_GROUP:blog} # 配置管理Group
        #sentinel配置
        sentinel:
            transport:
                port: ${SPRING_CLOUD_SENTINEL_TRANSPORT_PORT:8719} #指定客户端监控 API 的端口 可不提供，默认为 8719，若端口冲突会自动向下探测可用的端口
                dashboard: ${SPRING_CLOUD_SENTINEL_TRANSPORT_DASHBOARD:localhost:8080} #控制台的地址
    profiles:
        active: dev # 根据不同环境切换配置环境
    # 数据源mysql配置
    datasource:
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/weblog?characterEncoding=UTF-8&useUnicode=true&useSSL=false}
        username: ${SPRING_DATASOURCE_USERNAME:root}
        password: ${SPRING_DATASOURCE_PASSWORD:123456}
        # 数据源hikari连接池配置
        type: com.zaxxer.hikari.HikariDataSource
        hikari:
            minimum-idle: 10 # 池中维护的最小空闲连接数
            idle-timeout: 60000 # 连接允许在池中闲置的最长时间
            maximum-pool-size: 20 # 池中最大连接数，包括闲置和使用中的连接
            auto-commit: true # 自动提交从池中返回的连接
            pool-name: HikariCP # 连接池的用户定义名称
            max-lifetime: 600000 # 池中连接最长生命周期
            connection-timeout: 30000 # 等待来自池的连接的最大毫秒数
            connection-test-query: SELECT 1 # 指定校验连接合法性执行的sql语句
    # redis配置
    redis:
        host: ${SPRING_REDIS_HOST:localhost}
        port: ${SPRING_REDIS_PORT:6379}
        password: ${SPRING_REDIS_PASSWORD:}
    # zipkin配置，链路调用可视化面板
    zipkin:
        enabled: ${SPRING_ZIPKIN_ENABLED:true} #默认允许开启
        #base-url: ${SPRING_ZIPKIN_BASEURL:http://localhost:9411/} #zipkin服务器地址（只有sender type为web时才需要配置），sleuth会将数据传输到zipkin服务器 需自行到zipkin官网下载jar包安装运行
        sender:
            type: ${SPRING_ZIPKIN_SENDER_TYPE:rabbit} #发送方式（一共四种，默认web，需要配置base-url参数；设置其他三项则需要配置mq参数（连接成功后默认会生成一个zipkin的队列名称进行链路消息的发送与消费），无需再配置base-url参数，使用mq的好处能达到解耦，不需关心Zipkin服务器的状态）：activemq，rabbit，kafka，web  当配置了base-url，此项可不配置，默认使用http方式收集
    # sleuth链路跟踪配置
    sleuth:
        sampler:
            # 设置采集日志的百分比，数值范围0-1， 1代表100%采集；可依据环境以及实际情况设置
            probability: ${SPRING_SLEUTH_SAMPLER_PROBABILITY:1}
    #rabbitmq配置
    rabbitmq:
        host: ${SPRING_RABBITMQ_HOST:localhost} #ip
        port: ${SPRING_RABBITMQ_PORT:5672} #端口
        username: ${SPRING_RABBITMQ_USERNAME:guest} #用户名
        password: ${SPRING_RABBITMQ_PASSWORD:guest} #密码
        virtual-host: / #虚拟主机 每个virtual-host相当于一个相对独立的RabbitMQ服务器，每个virtual-host之间是相互隔离的
        listener:
            simple:
                retry:
                    enabled: false #监听重试是否可用
                    max-attempts: 5 #最大重试次数
                    initial-interval: 3000 #重试间隔次数
    # jackson配置
    jackson:
        # 以下为时间格式转换全局设置，如果只需局部设置则在时间字段上加注解@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")
        date-format: yyyy-MM-dd HH:mm:ss
        time-zone: GMT+8
        # 属性值为NULL的字段则不参与序列化，即null值不返回给前端
        default-property-inclusion: non_null
# mybatis配置
mybatis-plus:
    # mapper层xml文件路径映射
    mapper-locations: classpath:mapper/*.xml
    #实体扫描，多个package用逗号或者分号分隔
    type-aliases-package: com.teeya.article.entity
    configuration:
        # 开启驼峰式命名规则自动转换 对于数据库有下划线_的字段，需要配置
        map-underscore-to-camel-case: true
        # mybatis-plus配置控制台打印完整带参数SQL语句
        log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
name: article-admin  # 测试用
##使用sentinel配置
feign:
    sentinel:
        enabled: ${FEIGN_SENTINEL_ENABLED:true}
# xxl-job配置参数
xxl:
    job:
        admin: ### 调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行"执行器心跳注册"和"任务结果回调"；为空则关闭自动注册；
            addresses: ${XXL_JOB_ADMIN_ADDRESSES:http://127.0.0.1:8080/xxl-job-admin}
        executor: ### 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册
            appname: ${XXL_JOB_EXECUTOR_APPNAME:article-admin}
            port: ${XXL_JOB_EXECUTOR_PORT:9005}