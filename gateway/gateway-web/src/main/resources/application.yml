######################
# ${server.port:8080}表示需要从全局的配置内容中读取server.port的配置信息，如果没有找到则使用冒号（:） 后的内容
######################

## 用本地配置
server:
    port: 8081 # 启动端口
spring:
    application:
        name: gateway-web
    cloud:
        nacos:
            discovery: #nacos注册中心地址配置
                server-addr: localhost:8848
                namespace: a4d0cf40-1125-4263-81e5-3f628bc90302 # 命名空间ID
                #group: blog # 配置管理Group
            config: #nacos配置中心地址配置
                server-addr: localhost:8848
        #网关配置
        gateway:
            #默认的全局过滤器
            default-filters:
            discovery:
                locator:
                    enabled: true #注册中心生效，可以自动根据注册中心的服务名进行路由转发（而不需要像以下配置routes）
            routes: #路由配置，实际生产环境需要做到动态路由配置
                ##authorization-server调用  两种方式（实际中以第二种方式配置并持久化数据库）： 服务url的方式：http://localhost:9777/   或者注册服务serviceId的方式： lb://ribbon-consumer
                -   id: authorization-server #路由的唯一id
                    uri: lb://authorization-server
                    predicates: #断言，即路由的规则
                        - Path=/authorization-server/**
                    filters: #过滤器
                        - StripPrefix=1 #url截取的个数 本例会把/authorization-server截掉，截掉后的部分才是转发的url路径
                ##authentication-server调用  两种方式（实际中以第二种方式配置并持久化数据库）： 服务url的方式：http://localhost:9779/   或者注册服务serviceId的方式： lb://feign-consumer
                -   id: authentication-server
                    uri: lb://authentication-server
                    predicates:
                        - Path=/authentication-server/**
                    filters:
                        - StripPrefix=1
                -   id: admin-user
                    uri: lb://admin-user
                    predicates:
                        - Path=/admin-user/**
                    filters:
                        - StripPrefix=1
                -   id: article-admin
                    uri: lb://article-admin
                    predicates:
                        - Path=/article-admin/**
                    filters:
                        - StripPrefix=1
                -   id: file-server
                    uri: lb://file-server
                    predicates:
                       - Path=/file-server/**
                    filters:
                       - StripPrefix=1
        #sentinel配置
        sentinel:
            transport:
                port: 8719 #指定客户端监控 API 的端口  默认，可不设置
                dashboard: localhost:8080 #控制台的地址
    # 数据源mysql配置
#    datasource:
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://localhost:3306/user?characterEncoding=UTF-8&useUnicode=true&useSSL=false
#        username: root
#        password: 123456
        # 数据源hikari连接池配置
#        type: com.zaxxer.hikari.HikariDataSource
#        hikari:
#            minimum-idle: 10 # 池中维护的最小空闲连接数
#            idle-timeout: 60000 # 连接允许在池中闲置的最长时间
#            maximum-pool-size: 20 # 池中最大连接数，包括闲置和使用中的连接
#            auto-commit: true # 自动提交从池中返回的连接
#            pool-name: HikariCP # 连接池的用户定义名称
#            max-lifetime: 600000 # 池中连接最长生命周期
#            connection-timeout: 30000 # 等待来自池的连接的最大毫秒数
#            connection-test-query: SELECT 1 # 指定校验连接合法性执行的sql语句
    # redis配置
    redis:
        host: localhost
        port: 6379
        password:
    #profiles:
    #    active: dev # 根据不同环境切换配置环境
name: gateway-web  #测试用
##使用sentinel配置
feign:
    sentinel:
        enabled: true
logging: #日志配置文件引入 classpath的默认路径为resources目录下，所以需要在resources目录下添加logback-logstash.xml日志配置文件
    config: classpath:logback-logstash.xml

############  skywalking 探针  在VM Options添加以下参数 -javaagent：agent的jar包所在路径  Dskywalking.agent.service_name：自定义的service的name -Dskywalking.collector.backend_service：aop的地址 ###########

#-javaagent:D:/skywalking-agent/skywalking-agent.jar
#-Dskywalking.agent.service_name=test
#-Dskywalking.collector.backend_service=localhost:11800
####################################################


############  sentinel引入 ###########
#下载并启动sentinel-dashboard.jar  （暂时没有官方镜像）
####################################################


## 忽视鉴权的url
gateway:
    ignore:
        authentication:
            url: /oauth/,/v2/api-docs,/favor.ioc #/oauth/ Oauth2授权端点    /v2/api-docs Swagger2接口页面的端点,需要放行