## 用本地配置

##自定义属性
base:
    config:
        swagger:
            enabled: true
            contact:
                name: ZJH
                email: 18826233829@163.com
                url:
            title: 分布式事务demo api
            description: 分布式事务demo接口
            version: 2.0
        rabbitmq:
            points-queue: points.queue
            points-retry-queue: points.retry.queue
            points-route-key: points.route.key
            points-exchange: points.exchange

##非自定义属性
server:
    port: 9901 # 启动端口
spring:
    application:
        name: distributed-transaction-rabbitmq-consumer
    cloud:
        nacos:
            discovery: # nacos注册中心地址配置
                server-addr: localhost:8848
            config: # nacos配置中心地址配置
                server-addr: localhost:8848
        #sentinel配置
        sentinel:
            transport:
                port: 8719 #指定客户端监控 API 的端口  默认，可不设置
                dashboard: localhost:8080 #控制台的地址
    profiles:
        active: dev # 根据不同环境切换配置环境
        # 数据源mysql配置
    datasource:
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/distributed-transaction-rabbitmq-consumer?characterEncoding=UTF-8&useUnicode=true&useSSL=false
        username: root
        password: 123456
        max-idle: 5
        # 数据源hikari连接池配置
        type: com.zaxxer.hikari.HikariDataSource
        hikari:
            minimum-idle: 10 # 池中维护的最小空闲连接数
            idle-timeout: 60000 # 连接允许在池中闲置的最长时间
            maximum-pool-size: 20 # 池中最大连接数，包括闲置和使用中的连接
            auto-commit: true # 自动提交从池中返回的连接
            pool-name: HikariCP # 连接池的用户定义名称
            max-lifetime: 600000 # 池中连接最长生命周期
            connection-timeout: 30000 # 等待来自池的连接的最大毫秒数
            connection-test-query: SELECT 1 # 指定校验连接合法性执行的sql语句
    # redis配置
    redis:
        host: localhost
        port: 6379
        password:
    # zipkin配置，链路调用可视化面板
    zipkin:
        enabled: false #关闭，demo案例不需配置
    # sleuth链路跟踪配置
    sleuth:
        sampler:
            # 设置采集日志的百分比，数值范围0-1， 1代表100%采集；可依据环境以及实际情况设置
            probability: 1
    #rabbitmq配置
    rabbitmq:
        host: localhost #ip
        port: 5672 #端口
        username: guest #用户名
        password: guest #密码
        virtual-host: / #虚拟主机 每个virtual-host相当于一个相对独立的RabbitMQ服务器，每个virtual-host之间是相互隔离的
        listener:
            simple:
                retry:
                    enabled: false #监听重试是否可用
                    max-attempts: 5 #最大重试次数
                    initial-interval: 3000 #重试间隔次数
                acknowledge-mode: manual #消息确认方式,开启手动ack确认
    # jackson配置
    jackson:
        # 以下为时间格式转换全局设置，如果只需局部设置则在时间字段上加注解@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")
        date-format: yyyy-MM-dd HH:mm:ss
        time-zone: GMT+8
        # 属性值为NULL的字段则不参与序列化，即null值不返回给前端
        default-property-inclusion: non_null
# mybatis配置
mybatis-plus:
    # mapper层xml文件路径映射
    mapper-locations: classpath:mapper/*.xml
    #实体扫描，多个package用逗号或者分号分隔
    type-aliases-package: com.teeya.demo.entity
    configuration:
        # 开启驼峰式命名规则自动转换 对于数据库有下划线_的字段，需要配置
        map-underscore-to-camel-case: true
        # mybatis-plus配置控制台打印完整带参数SQL语句
        log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
name: distributed-transaction-rabbitmq-consumer  # 测试用
##使用sentinel配置
feign:
    sentinel:
        enabled: true
